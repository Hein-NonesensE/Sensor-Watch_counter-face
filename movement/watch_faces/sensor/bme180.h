#define BMP180_ADDRESS (0x77) // Datasheet says read address 0xEE & write address 0xEF. This is equal to 0x77 with added read/write bits.
#define BMP180_SOFT_RESET_CODE (0xB6)
//#define BMP180_STATUS_UPDATING_MASK (1 << 3)

typedef enum BMP180Register {
    BMP180_REGISTER_AC1 = 0xAA,
    BMP180_REGISTER_AC2 = 0xAC,
    BMP180_REGISTER_AC3 = 0xAE,
    BMP180_REGISTER_AC4 = 0xB0,
    BMP180_REGISTER_AC5 = 0xB2,
    BMP180_REGISTER_AC6 = 0xB4,
    BMP180_REGISTER_B1 = 0xB6,
    BMP180_REGISTER_B2 = 0xB8,
    BMP180_REGISTER_MB = 0xBA,
    BMP180_REGISTER_MC = 0xBC,
    BMP180_REGISTER_MD = 0xBE,

    BMP180_REGISTER_CHIPID = 0xD0,
    BMP180_REGISTER_VERSION = 0xD1,
    BMP180_REGISTER_SOFTRESET = 0xE0,

    BMP180_REGISTER_CAL26 = 0xE1,

    BMP180_REGISTER_CONTROL_HUMID = 0xF2,
    BMP180_REGISTER_STATUS = 0XF3,
    BMP180_REGISTER_CONTROL = 0xF4,
    BMP180_REGISTER_CONFIG = 0xF5,
    BMP180_REGISTER_PRESSURE_DATA = 0xF7,
    BMP180_REGISTER_TEMP_DATA = 0xFA,
    BMP180_REGISTER_HUMID_DATA = 0xFD
} BMP180Register;



/*typedef enum BMP180Control {
    BME280_CONTROL_MODE_SLEEP = 0b00,
    BME280_CONTROL_MODE_FORCED = 0b01,
    BME280_CONTROL_MODE_NORMAL = 0b11,
    BME280_CONTROL_PRESSURE_SAMPLING_NONE = 0b000 << 2,
    BME280_CONTROL_PRESSURE_SAMPLING_X1 = 0b001 << 2,
    BME280_CONTROL_PRESSURE_SAMPLING_X2 = 0b010 << 2,
    BME280_CONTROL_PRESSURE_SAMPLING_X4 = 0b011 << 2,
    BME280_CONTROL_PRESSURE_SAMPLING_X8 = 0b100 << 2,
    BME280_CONTROL_PRESSURE_SAMPLING_X16 = 0b101 << 2,
    BME280_CONTROL_TEMPERATURE_SAMPLING_NONE = 0b000 << 5,
    BME280_CONTROL_TEMPERATURE_SAMPLING_X1 = 0b001 << 5,
    BME280_CONTROL_TEMPERATURE_SAMPLING_X2 = 0b010 << 5,
    BME280_CONTROL_TEMPERATURE_SAMPLING_X4 = 0b011 << 5,
    BME280_CONTROL_TEMPERATURE_SAMPLING_X8 = 0b100 << 5,
    BME280_CONTROL_TEMPERATURE_SAMPLING_X16 = 0b101 << 5
} BME280Control;

typedef enum BME280ControlHumidity {
    BME280_CONTROL_HUMID_SAMPLING_NONE = 0b000,
    BME280_CONTROL_HUMID_SAMPLING_X1 = 0b001,
    BME280_CONTROL_HUMID_SAMPLING_X2 = 0b010,
    BME280_CONTROL_HUMID_SAMPLING_X4 = 0b011,
    BME280_CONTROL_HUMID_SAMPLING_X8 = 0b100,
    BME280_CONTROL_HUMID_SAMPLING_X16 = 0b101
} BME280ControlHumidity;

typedef enum BME280Filter {
    BME280_CONFIG_FILTER_OFF = 0b000 << 2,
    BME280_CONFIG_FILTER_X2 = 0b001 << 2,
    BME280_CONFIG_FILTER_X4 = 0b010 << 2,
    BME280_CONFIG_FILTER_X8 = 0b011 << 2,
    BME280_CONFIG_FILTER_X16 = 0b10 << 2,
    BME280_CONFIG_STANDBY_MS_0_5 = 0b000 << 5,
    BME280_CONFIG_STANDBY_MS_10 = 0b110 << 5,
    BME280_CONFIG_STANDBY_MS_20 = 0b111 << 5,
    BME280_CONFIG_STANDBY_MS_62_5 = 0b001 << 5,
    BME280_CONFIG_STANDBY_MS_125 = 0b010 << 5,
    BME280_CONFIG_STANDBY_MS_250 = 0b011 << 5,
    BME280_CONFIG_STANDBY_MS_500 = 0b100 << 5,
    BME280_CONFIG_STANDBY_MS_1000 = 0b101 << 5
} BME280Filter;

inline uint16_t make_le_16(uint16_t val) { return (val >> 8) | (val << 8); }*/
